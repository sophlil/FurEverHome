{"version":3,"sources":["pages/Login.js","components/pets.js","components/petList.js","data/data.js","pages/BrowsePets.js","App.js","reportWebVitals.js","index.js"],"names":["Login","userName","setUserName","useState","password","setPassword","React","createElement","action","method","type","name","value","onChange","e","target","required","AnimalDisplay","_ref","pet","species","breed","checked","disposition","goodWithOtherAnimals","readOnly","goodWithChildren","mustBeLeashed","src","photo","alt","style","width","height","availability","weight","description","age","daysSinceAvailable","PetList","pets","id","map","key","animals","Browse","Fragment","App","className","Router","Link","to","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e6c2f6f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css'\n\nconst Login = () => {\n    const[userName,setUserName] = useState('');\n    const[password,setPassword] = useState('');\n\n    return(\n        <div>\n            <header>\n            <h2>Login Page</h2>\n                <form action=\"http://localhost:3005/login\" method=\"post\">\n                    <fieldset>\n                        <legend>User Name</legend>\n                        <label>Please enter your User Name</label>\n                        <input type = \"text\" name=\"username\" value={userName}\n                        onChange = {e => setUserName(e.target.value)} required></input>\n                    </fieldset>\n\n                    <fieldset>\n                    <legend>Password</legend>\n                        <label>Please enter your Password</label>\n                        <input type = \"text\" name=\"password\" value={password}\n                        onChange = {e=> setPassword(e.target.value)} required></input>\n\n                    </fieldset>\n                    <button type=\"submit\">Login</button>\n                </form>\n\n            </header>\n\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react'\n\nfunction AnimalDisplay({pet}){\n\n\n        return(\n        <tr>\n            <td>{pet.name}</td>\n            <td>{pet.species}</td>\n            <td>{pet.breed}</td>\n            <td>\n                <ul>\n                    <li>\n                        <label>\n                            <input type = \"checkbox\" checked = {pet.disposition.goodWithOtherAnimals} readOnly />Good with other animals\n                        </label>\n                    </li>\n                    <li>\n                        <label>\n                            <input type = \"checkbox\" checked = {pet.disposition.goodWithChildren} readOnly />Good with children\n                        </label>\n                    </li>\n                    <li>\n                        <label>\n                            <input type = \"checkbox\" checked = {pet.disposition.mustBeLeashed} readOnly />Must be leashed\n                        </label>\n                    </li>\n                </ul>\n            </td>\n            <td>\n                <img\n                    src={pet.photo} \n                alt={pet.name}                        \n                style={{ width: '300px', height: '300px' }}\n                />\n            </td>\n            <td>{pet.availability}</td>\n            <td>{pet.weight}</td>\n            <td>{pet.height}</td>\n            <td>{pet.description}</td>\n            <td>{pet.age}</td>\n            <td>{pet.daysSinceAvailable}</td>\n        </tr>\n        );\n\n\n}\nexport default AnimalDisplay;","import React from 'react';\nimport AnimalDisplay from './pets';\n\n\n\nfunction PetList({pets}){\n\n    return (\n        <table id = \"Pets\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Species</th>\n                    <th>Breed</th>\n                    <th>Disposition</th>\n                    <th>Photo</th>\n                    <th>Availability</th>\n                    <th>Weight</th>\n                    <th>Height</th>\n                    <th>Description</th>\n                    <th>Age</th>\n                    <th>Days Since Available to Adopt</th>\n                </tr>\n            </thead>\n            <tbody>\n                {pets.map(pet=><AnimalDisplay pet ={pet}\n\n                key = {pet.id}/>)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default PetList;\n","const animals = [\n    {\n        id: 1,\n        name: 'Nimbus',\n        species: 'Dog',\n        breed: 'Corgi',\n        disposition: {\n          goodWithOtherAnimals: true,\n          goodWithChildren: true,\n          mustBeLeashed: false,\n        },\n        photo: 'https://plus.unsplash.com/premium_photo-1693932897536-c294c8a8ba0a?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n        availability: 'Available',\n        weight: '19',\n        height: '1',\n        description: 'cute corgi that is super friendly',\n        age: '5',\n        daysSinceAvailable: '3',\n    },\n    {\n        id: 2,\n        name: 'Rufus',\n        species: 'Cat',\n        breed: 'Tabby',\n        disposition: {\n          goodWithOtherAnimals: false,\n          goodWithChildren: true,\n          mustBeLeashed: false,\n        },\n        photo: 'https://images.unsplash.com/photo-1645437136523-dd412d06a79f?q=80&w=2834&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n        availability: 'Available',\n        weight: '12',\n        height: '1',\n        description: 'cute cat that is super friendly',\n        age: '15',\n        daysSinceAvailable: '25',\n    }\n\n\n\n\n]\nexport default animals;","import React from 'react';\nimport PetList from '../components/petList';\nimport '../App.css';\nimport animals from '../data/data';\n\nfunction Browse(){\n\n    return(\n        <>\n        <h2>List of Pets</h2>\n        <PetList pets={animals}/>\n        </>\n);\n\n}\nexport default Browse;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Browse from './pages/BrowsePets'\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n\n\nreturn (\n    <div className = \"App\">\n        <h1>FurEver Home</h1>\n        <p>FurEver Home is about matching animals from a shelter to their ideal “FurEver” homes by\n            creating dating profiles for each animal. This unique concept provides users with an engaging\n            way to find their dream furry pet to bring home. With a user-friendly interface and a fun process,\n            users can easily research all the pets available for adoption at a shelter by filtering for type of\n            animal, breed, and disposition to help tailor the best results.</p>\n            <Router>\n            <nav>\n                <Link to =\"/login\">Login</Link>\n            </nav>\n            <nav>\n              <Link to =\"/browse\">Browse Pets</Link>\n            </nav>\n            <div className=\"App-header\">\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/browse\">\n            <Browse />\n          </Route>\n\n\n            </div>\n            </Router>\n\n        </div>\n);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n\n  export default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}